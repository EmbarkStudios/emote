agent_kinds:
  large_config: &large
    agents:
      cluster: builds-fi-2
      queue: monorepo-ci
      size: large
    env:
      PANTS_PROCESS_EXECUTION_LOCAL_PARALLELISM: 12
      PANTS_RULE_THREADS_CORE: 6

  small_config: &small
    agents:
      cluster: builds-fi-2
      queue: monorepo-ci
      size: small
    env:
      PANTS_PROCESS_EXECUTION_LOCAL_PARALLELISM: 6
      PANTS_RULE_THREADS_CORE: 3

env:
  PYTHON_VERSION: '3.10'
  PY: "python3.10"
  PANTS_PYTHON_INTERPRETER_CONSTRAINTS: "['==3.10.*']"
  PANTS_CONFIG_FILES: "pants.ci.toml"
  PYTHON_BIN_NAME: "python3.10"
  PEX_PYTHON: "python3.10"

steps:
  - group: ":passport_control: Validating PR"
    steps:
      - label: ":hourglass: Validating branch age"
        command: bash .buildkite/validate-branch-age.sh
        <<: *small

      - label: ":straight_ruler: Checking line-endings"
        command: bash .buildkite/check-line-endings.sh
        <<: *small

  - wait

  - group: ":vertical_traffic_light: Validating changes"
    steps:
      - label: ":package: Validating {{matrix}} packages"
        command: |
          . ci/init.sh yes
          pants package --filter-address-regex='.*@resolve={{matrix}}' emote::

        matrix:
          - "cpu"
          - "gpu"
          - "base"

        <<: *large

      - label: ":package: Packaging bases"
        command: |
          . ci/init.sh yes
          pants package --filter-address-regex='-.*@resolve=.*' emote::

        <<: *large

      - label: ":pants: Validating tailor"
        command: |
          . ci/init.sh yes
          pants tailor --check ::

        <<: *small

      - label: ":python-black: :isort: Check-and-lint "
        command: |
          . ci/init.sh yes
          pants update-build-files --check lint ::

        <<: *small

      - label: ":pytest: Run tests"
        command: |
          . ci/init.sh yes
          pants test ::
          git fetch origin
          pants run ci/coverage.py -- dist/coverage/python/coverage.json > comment.md
          pants run ci:post-comment -- comment.md

        <<: *small

  - wait

  - label: ":packagecloud: Triggering Cloud-Training build"
    trigger: erupt
    if: 'build.pull_request.labels includes "trigger: cloud" || build.branch == "main"'

    build:
      branch: main
      env:
        EMOTE_CREATOR: "${BUILDKITE_BUILD_CREATOR}"
        EMOTE_BRANCH:  "${BUILDKITE_BRANCH}"
        EMOTE_COMMIT:  "${BUILDKITE_COMMIT}"
        EMOTE_MESSAGE: "${BUILDKITE_MESSAGE}"
        EMOTE_TAG:     "${BUILDKITE_TAG}"
