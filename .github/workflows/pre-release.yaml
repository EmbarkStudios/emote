name: Publish pre-release package

on:
  schedule:
  - cron: "0 0 * * *"

  workflow_dispatch:

concurrency:
  group: "pre-release"
  cancel-in-progress: true

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  pre-release:
    name: "Pre Release"
    runs-on: "ubuntu-latest"
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags

      - run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "latest" -m "Setting latest release to ${{ github.sha }}"
          git push origin --force-with-lease "latest"

      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          python-version: 3.8
          architecture: x64
          version: 2.1.5
          prerelease: true
          enable-pep582: true
          cache: true
          cache-dependency-path: '**/pdm.lock'
      - name: Install dependencies
        run: pdm install -d -G ci

      - name: Build Packages
        run: pdm build

      - name: "Build Changelog"
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: ".github/release-action-config.json"
          toTag: ${{ github.ref }}

      - name: Create Release
        uses: mikepenz/action-gh-release@v0.2.0-a03 #softprops/action-gh-release
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          prerelease: true
          tag_name: "latest"
          files: |
            dist/*
            LICENSE-*
